#include "keys_ru.h"
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        enc_vol: enc_vol {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENC_VOL";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOL_UP>, <&kp C_VOL_DN>;
        };

        cap_sen: cap_sen {
            compatible = "zmk,behavior-hold-tap";
            label = "CAP_SEN";
            bindings = <&mo>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-while-undecided;
        };

        ctrl_tap_to_ru: ctrl_tap_to_ru {
            compatible = "zmk,behavior-hold-tap";
            label = "CTRL_TAP_TO_RU";
            bindings = <&kp>, <&layer_ru>;

            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <300>;
            quick-tap-ms = <300>;
            hold-while-undecided;
        };

        ctrl_tap_to_en: ctrl_tap_to_en {
            compatible = "zmk,behavior-hold-tap";
            label = "CTRL_TAP_TO_EN";
            bindings = <&kp>, <&layer_en>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <299>;
            hold-while-undecided;
        };

        right_shift_to_scroll_by_tap: right_shift_to_scroll_by_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_SHIFT_TO_SCROLL_BY_TAP";
            bindings = <&kp>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <100>;
            hold-while-undecided;
        };

        mo_sk_and_layer: mo_sk_and_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_SK_AND_LAYER";
            bindings = <&mo>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <100>;
            hold-while-undecided;
        };

        red_mo_ru: red_mo_ru {
            compatible = "zmk,behavior-hold-tap";
            label = "RED_MO_RU";
            bindings = <&mo>, <&layer_ru>;

            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            hold-while-undecided;
        };

        blue_mo_en: blue_mo_en {
            compatible = "zmk,behavior-hold-tap";
            label = "BLUE_MO_EN";
            bindings = <&mo>, <&layer_en>;

            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            hold-while-undecided;
        };

        dblClick: dblClick {
            compatible = "zmk,behavior-tap-dance";
            label = "DBLCLICK";
            #binding-cells = <0>;
            bindings = <&none>, <&none>, <&tog 7>;

            tapping-term-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        cmben {
            bindings = <&layer_en>;
            key-positions = <15 16>;
            layers = <1>;
        };

        cmbru {
            bindings = <&layer_ru>;
            key-positions = <15 16>;
            layers = <0>;
        };

        round_brackets {
            bindings = <&pair_and_go_inside LPAR RPAR>;
            key-positions = <14 16>;
            layers = <3 4>;
        };

        curly_brackets {
            bindings = <&pair_and_go_inside LEFT_BRACE RIGHT_BRACE>;
            key-positions = <19 21>;
            layers = <3 4>;
        };

        square_brackets {
            bindings = <&pair_and_go_inside LEFT_BRACKET RIGHT_BRACKET>;
            key-positions = <44 45>;
            layers = <3 4>;
        };

        single_quote {
            bindings = <&pair_and_go_inside SQT SQT>;
            key-positions = <7 9>;
            layers = <3 4>;
        };

        angle_brackets {
            bindings = <&pair_and_go_inside LESS_THAN GREATER_THAN>;
            key-positions = <4 2>;
            layers = <3 4>;
        };

        capsword {
            bindings = <&caps_word>;
            key-positions = <36 49>;
        };
    };

    macros {
        to_ru: to_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N2))>;
            label = "TO_RU";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        to_en: to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N1))>;
            label = "TO_EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        layer_en: layer_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &to_en>;
            label = "LAYER_EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        layer_ru: layer_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &to_ru>;
            label = "LAYER_RU";
            tap-ms = <30>;
            wait-ms = <0>;
        };

        en: en {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to_en>,
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&to_ru>;

            label = "EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        dash: dash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "DASH";
        };

        pass: pass {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to_en &kp U &kp U &kp LS(S) &kp N4 &kp F &kp O &kp O &kp S &kp UNDER &kp LS(V) &kp LS(E)>;
            label = "PASS";
        };

        shift_and_scroll: shift_and_scroll {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp LEFT_SHIFT &mo 7>, <&macro_release>;

            label = "SHIFT_AND_SCROLL";
        };

        ru: ru {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to_ru &macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_wait_time 10>,
                <&to_en>,
                <&macro_wait_time 10>;

            label = "RU";
        };

        pair_and_go_inside: inside_pair {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &macro_param_2to1 &kp MACRO_PLACEHOLDER &kp LEFT>;
            label = "INSIDE_PAIR";
        };

        mouse_click_with_shift: mouse_click_with_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&mkp MB1>,
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_press>,
                <&kp LC(C)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        en {
            bindings = <
&lt 6 GRAVE  &kp N1  &kp N2    &kp N3    &kp N4     &lt 6 N5                                    &lt 6 N6         &kp N7     &kp N8         &kp N9    &kp N0    &mo 6
&kp ESC      &kp Q   &kp W     &kp E     &kp R      &kp T                                       &kp Y            &kp U      &kp I          &kp O     &kp P     &kp BSLH
&kp TAB      &kp A   &kp S     &kp D     &kp F      &kp G                                       &kp H            &kp J      &kp K          &kp L     &kp SEMI  &kp SQT
&kp LSHFT    &kp Z   &kp X     &kp C     &kp V      &kp B           &kp LBKT         &kp RBKT   &kp N            &kp M      &kp COMMA      &kp DOT   &kp FSLH  &kp RSHFT
                     &kp LALT  &kp LGUI  &kp LCTRL  &red_mo_ru 2 0  &kp BACKSPACE    &kp SPACE  &blue_mo_en 3 0  &kp ENTER  &kp RIGHT_GUI  &kp RALT
            >;

            display-name = "Base";
            sensor-bindings =
                <&enc_vol>,
                <&enc_vol>,
                <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>,
                <&inc_dec_kp DOWN UP>,
                <&enc_vol>,
                <&inc_dec_kp TAB RS(TAB)>;
        };

        ru {
            display-name = "Ru";
            bindings = <
&lt 6 GRAVE  &kp N1                   &kp N2                &kp N3              &kp N4              &kp N5                                                               &kp N6              &kp N7                     &kp N8               &kp N9                 &kp N0               &mo 6
&kp ESC      &kp RU_CYRILLIC_SHORT_I  &kp RU_CYRILLIC_TSE   &kp RU_CYRILLIC_U   &kp RU_CYRILLIC_KA  &kp RU_CYRILLIC_IE                                                   &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE        &kp RU_CYRILLIC_SHA  &kp RU_CYRILLIC_SHCHA  &kp RU_CYRILLIC_ZE   &kp BSLH
&kp TAB      &kp RU_CYRILLIC_EF       &kp RU_CYRILLIC_YERU  &kp RU_CYRILLIC_VE  &kp RU_CYRILLIC_A   &kp RU_CYRILLIC_PE                                                   &kp RU_CYRILLIC_ER  &kp RU_CYRILLIC_O          &kp RU_CYRILLIC_EL   &kp RU_CYRILLIC_DE     &kp RU_CYRILLIC_ZHE  &kp RU_CYRILLIC_E
&kp LSHFT    &kp RU_CYRILLIC_YA       &kp RU_CYRILLIC_CHE   &kp RU_CYRILLIC_ES  &kp RU_CYRILLIC_EM  &kp RU_CYRILLIC_I   &kp RU_CYRILLIC_HA    &kp RU_CYRILLIC_HARD_SIGN  &kp RU_CYRILLIC_TE  &kp RU_CYRILLIC_SOFT_SIGN  &kp RU_CYRILLIC_BE   &kp RU_CYRILLIC_YU     &kp RU_DOT           &kp RSHFT
                                      &kp LEFT_ALT          &kp LWIN            &kp LCTRL           &red_mo_ru 2 0      &kp BACKSPACE         &trans                     &blue_mo_en 4 0     &trans                     &kp RIGHT_GUI        &kp RALT
            >;

            sensor-bindings =
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>;
        };

        nav {
            bindings = <
&kp F1  &kp F2  &kp F3        &kp F4    &kp F5         &kp F6                     &kp F7        &kp F8       &kp F9         &kp F10     &kp F11  &kp F12
&trans  &trans  &trans        &trans    &trans         &kp INS                    &kp CAPSLOCK  &caps_word   &trans         &kp DELETE  &trans   &trans
&trans  &trans  &trans        &trans    &trans         &kp RET                    &kp LEFT      &kp UP       &kp DOWN       &kp RIGHT   &trans   &trans
&trans  &trans  &kp LC(LEFT)  &kp CAPS  &kp LC(RIGHT)  &kp DEL  &trans    &trans  &kp HOME      &kp PAGE_UP  &kp PAGE_DOWN  &kp END     &trans   &trans
                &trans        &trans    &trans         &trans   &trans    &trans  &mo 5         &trans       &kp N0         &trans
            >;

            display-name = "Navigation";
        };

        sym_en {
            bindings = <
&trans  &trans     &kp AT    &kp DLLR   &kp HASH  &trans                       &trans         &trans             &kp CARET         &trans             &trans    &trans
&trans  &trans     &kp LT    &kp EQUAL  &kp GT    &kp GRAVE                    &kp CARET      &kp DOUBLE_QUOTES  &kp UNDER         &kp SINGLE_QUOTE   &trans    &trans
&trans  &kp BSLH   &kp LPAR  &kp MINUS  &kp RPAR  &kp PLUS                     &kp PRCNT      &kp LBRC           &kp SEMI          &kp RBRC           &kp EXCL  &kp QUESTION
&trans  &kp COMMA  &kp STAR  &kp COLON  &kp FSLH  &trans     &trans    &trans  &ru RU_NUMERO  &kp PIPE           &kp TILDE         &kp AMPS           &kp DOT   &trans
                   &trans    &trans     &trans    &mo 5      &trans    &trans  &trans         &trans             &kp LEFT_BRACKET  &kp RIGHT_BRACKET
            >;

            display-name = "Symbols";
        };

        sym_ru {
            display-name = "Symbols";
            bindings = <
&trans  &trans        &en AT        &en DLLR      &en HASH     &trans                           &trans          &trans             &en CARET         &trans             &trans      &trans
&trans  &trans        &en LT        &kp EQUAL     &en GT       &en GRAVE                        &en CARET       &en DOUBLE_QUOTES  &kp UNDER         &en SINGLE_QUOTE   &trans      &trans
&trans  &kp RU_BSLH   &kp LPAR      &kp MINUS     &kp RPAR     &kp PLUS                         &kp RU_PERCENT  &en LBRC           &kp RU_SEMI       &en RBRC           &kp EXCL    &kp RU_QUESTION
&trans  &kp RU_COMMA  &kp RU_ASTRK  &kp RU_COLON  &kp RU_FSLH  &kp RU_NUMERO  &trans    &trans  &kp RU_NUMERO   &en PIPE           &en TILDE         &en AMPS           &kp RU_DOT  &trans
                      &trans        &trans        &trans       &mo 5          &trans    &trans  &trans          &trans             &en LEFT_BRACKET  &en RIGHT_BRACKET
            >;
        };

        adj {
            bindings = <
&bootloader  &trans  &trans  &trans  &trans  &trans                    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR_ALL
&trans       &trans  &trans  &trans  &trans  &trans                    &trans        &trans        &trans            &trans        &pass         &studio_unlock
&trans       &trans  &trans  &trans  &trans  &trans                    &out OUT_BLE  &kp C_VOL_DN  &kp K_MUTE        &kp C_VOL_UP  &trans        &trans
&trans       &trans  &trans  &trans  &trans  &trans  &trans    &trans  &out OUT_USB  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT    &trans        &trans
                     &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans        &trans            &trans
            >;

            display-name = "Adjust";
        };

        encoder {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings =
                <&inc_dec_kp 0 0>,
                <&inc_dec_kp 0 0>,
                <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>,
                <&inc_dec_kp RIGHT LEFT>,
                <&inc_dec_kp PAGE_DOWN PAGE_UP>,
                <&inc_dec_kp LA(RIGHT) LA(LEFT)>;
        };
    };
};
